package de.tudresden.webofthingstokenization.externalsmartcontractlibrary;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Array;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.4.
 */
@SuppressWarnings("rawtypes")
public class MyGovernor1 extends Contract {
    public static final String BINARY = "6101606040523480156200001257600080fd5b506040516200406338038062004063833981016040819052620000359162000761565b600482826040518060400160405280600a81526020016926bca3b7bb32b93737b960b11b815250806200006d6200014360201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c0526101205250508251620001139250600091506020840190620006ac565b50620001219050816200015e565b506001600160a01b0316610140526200013a81620001c7565b50505062000803565b6040805180820190915260018152603160f81b602082015290565b600454604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b6064811115620002505760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4015b60405180910390fd5b60006200025c62000343565b905080158015906200026e5750600754155b15620002e95760076000016040518060400160405280600063ffffffff168152602001620002a7846200037b60201b620012a71760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b62000304826007620003ea60201b620013141790919060201c565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6007546000901562000374576200036660076200043d60201b6200134a1760201c565b6001600160e01b0316905090565b5060065490565b60006001600160e01b03821115620003e65760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000247565b5090565b60008062000427846000016200040b436200048b60201b620013881760201c565b62000421866200037b60201b620012a71760201c565b620004f2565b6001600160e01b03918216969116945092505050565b80546000908015620004815762000469836200045b600184620007a0565b600091825260209091200190565b5464010000000090046001600160e01b031662000484565b60005b9392505050565b600063ffffffff821115620003e65760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000247565b8254600090819080156200064e57600062000514876200045b600185620007a0565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015620005985760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b6579000000000000000000604482015260640162000247565b8563ffffffff16816000015163ffffffff161415620005ed5784620005c4886200045b600186620007a0565b80546001600160e01b03929092166401000000000263ffffffff9092169190911790556200063d565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b602001519250839150620006a49050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b828054620006ba90620007c6565b90600052602060002090601f016020900481019282620006de576000855562000729565b82601f10620006f957805160ff191683800117855562000729565b8280016001018555821562000729579182015b82811115620007295782518255916020019190600101906200070c565b50620003e69291505b80821115620003e6576000815560010162000732565b6001600160a01b03811681146200075e57600080fd5b50565b600080604083850312156200077557600080fd5b8251620007828162000748565b6020840151909250620007958162000748565b809150509250929050565b600082821015620007c157634e487b7160e01b600052601160045260246000fd5b500390565b600181811c90821680620007db57607f821691505b60208210811415620007fd57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610140516137f76200086c600039600081816107e201528181611dac0152611ecd01526000612202015260006122510152600061222c01526000612185015260006121af015260006121d901526137f76000f3fe6080604052600436106102295760003560e01c80637b3c71d311610123578063c01f9e37116100ab578063deaaa7cc1161006f578063deaaa7cc14610730578063eb9019d414610764578063f23a6e6114610784578063f8ce560a146107b0578063fc0c546a146107d057600080fd5b8063c01f9e3714610665578063c28bc2fa14610685578063c59057e414610698578063d33219b4146106b8578063dd4e2ba5146106ea57600080fd5b8063a7713a70116100f2578063a7713a70146105d0578063a890c910146105e5578063ab58fb8e14610605578063b58131b014610625578063bc197c811461063957600080fd5b80637b3c71d31461055c5780637d5e81e21461057c57806397c3d3341461059c5780639a802a6d146105b057600080fd5b80632fe3e261116101b1578063544ffc9c11610175578063544ffc9c1461047d57806354fd4d50146104d257806356781388146104fc5780635f398a141461051c57806360c4247f1461053c57600080fd5b80632fe3e2611461039e5780633932abb1146103d25780633bccf4fd146103e65780633e4f49e614610406578063438596321461043357600080fd5b806306fdde03116101f857806306fdde03146102e5578063150b7a0214610307578063160cbed71461034b5780632656227d1461036b5780632d63f6931461037e57600080fd5b806301ffc9a71461025157806302a251a31461028657806303420181146102a557806306f3f9e6146102c557600080fd5b3661024c5730610237610804565b6001600160a01b03161461024a57600080fd5b005b600080fd5b34801561025d57600080fd5b5061027161026c36600461292d565b61081d565b60405190151581526020015b60405180910390f35b34801561029257600080fd5b5061b2fa5b60405190815260200161027d565b3480156102b157600080fd5b506102976102c0366004612a6b565b61082e565b3480156102d157600080fd5b5061024a6102e0366004612b11565b610926565b3480156102f157600080fd5b506102fa6109be565b60405161027d9190612b77565b34801561031357600080fd5b50610332610322366004612b9f565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161027d565b34801561035757600080fd5b50610297610366366004612d7b565b610a50565b610297610379366004612d7b565b610c78565b34801561038a57600080fd5b50610297610399366004612b11565b610d65565b3480156103aa57600080fd5b506102977fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b3480156103de57600080fd5b506001610297565b3480156103f257600080fd5b50610297610401366004612e0a565b610d9c565b34801561041257600080fd5b50610426610421366004612b11565b610e12565b60405161027d9190612e6e565b34801561043f57600080fd5b5061027161044e366004612e96565b60008281526008602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561048957600080fd5b506104b7610498366004612b11565b6000908152600860205260409020805460018201546002909201549092565b6040805193845260208401929092529082015260600161027d565b3480156104de57600080fd5b506040805180820190915260018152603160f81b60208201526102fa565b34801561050857600080fd5b50610297610517366004612ec6565b610e1d565b34801561052857600080fd5b50610297610537366004612ef2565b610e46565b34801561054857600080fd5b50610297610557366004612b11565b610e90565b34801561056857600080fd5b50610297610577366004612f75565b610f25565b34801561058857600080fd5b50610297610597366004612fce565b610f77565b3480156105a857600080fd5b506064610297565b3480156105bc57600080fd5b506102976105cb366004613082565b610f8e565b3480156105dc57600080fd5b50610297610fa5565b3480156105f157600080fd5b5061024a6106003660046130da565b610fcf565b34801561061157600080fd5b50610297610620366004612b11565b61105b565b34801561063157600080fd5b506000610297565b34801561064557600080fd5b506103326106543660046130f7565b63bc197c8160e01b95945050505050565b34801561067157600080fd5b50610297610680366004612b11565b6110fe565b61024a61069336600461318a565b61112d565b3480156106a457600080fd5b506102976106b3366004612d7b565b611241565b3480156106c457600080fd5b506004546001600160a01b03165b6040516001600160a01b03909116815260200161027d565b3480156106f657600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e908201526102fa565b34801561073c57600080fd5b506102977f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561077057600080fd5b5061029761077f3660046131cd565b61127b565b34801561079057600080fd5b5061033261079f3660046131f9565b63f23a6e6160e01b95945050505050565b3480156107bc57600080fd5b506102976107cb366004612b11565b61129c565b3480156107dc57600080fd5b506106d27f000000000000000000000000000000000000000000000000000000000000000081565b60006108186004546001600160a01b031690565b905090565b6000610828826113ed565b92915050565b6000806108d26108ca7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c60405161086a929190613261565b60405180910390208b805190602001206040516020016108af959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b60405160208183030381529060405280519060200120611412565b868686611460565b90506109188a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d925061147e915050565b9a9950505050505050505050565b61092e610804565b6001600160a01b0316336001600160a01b0316146109675760405162461bcd60e51b815260040161095e90613271565b60405180910390fd5b30610970610804565b6001600160a01b0316146109b25760008036604051610990929190613261565b604051809103902090505b806109a660026115e0565b146109b05761099b565b505b6109bb8161165f565b50565b6060600080546109cd906132a8565b80601f01602080910402602001604051908101604052809291908181526020018280546109f9906132a8565b8015610a465780601f10610a1b57610100808354040283529160200191610a46565b820191906000526020600020905b815481529060010190602001808311610a2957829003601f168201915b5050505050905090565b600080610a5f86868686611241565b90506004610a6c82610e12565b6007811115610a7d57610a7d612e58565b14610a9a5760405162461bcd60e51b815260040161095e906132e3565b6000600460009054906101000a90046001600160a01b03166001600160a01b031663f27a0c926040518163ffffffff1660e01b815260040160206040518083038186803b158015610aea57600080fd5b505afa158015610afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b229190613324565b6004805460405163b1c5f42760e01b81529293506001600160a01b03169163b1c5f42791610b5b918b918b918b916000918c9101613406565b60206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190613324565b600083815260056020526040808220929092556004805492516308f2a0bb60e41b81526001600160a01b0390931692638f2a0bb092610bf6928c928c928c9290918c918a9101613454565b600060405180830381600087803b158015610c1057600080fd5b505af1158015610c24573d6000803e3d6000fd5b505050507f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892828242610c5691906134c2565b6040805192835260208301919091520160405180910390a15095945050505050565b600080610c8786868686611241565b90506000610c9482610e12565b90506004816007811115610caa57610caa612e58565b1480610cc757506005816007811115610cc557610cc5612e58565b145b610ce35760405162461bcd60e51b815260040161095e906132e3565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610d4182888888886117ab565b610d4e828888888861184e565b610d5b828888888861185b565b5095945050505050565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610dea906108ca906080016108af565b9050610e0787828860405180602001604052806000815250611894565b979650505050505050565b6000610828826118b7565b600080339050610e3e84828560405180602001604052806000815250611894565b949350505050565b600080339050610e0787828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a925061147e915050565b60075460009080610ea5575050600654919050565b60006007610eb46001846134da565b81548110610ec457610ec46134f1565b60009182526020918290206040805180820190915291015463ffffffff8116808352600160201b9091046001600160e01b03169282019290925291508410610f1a57602001516001600160e01b03169392505050565b610e3e600785611a1b565b600080339050610f6d86828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061189492505050565b9695505050505050565b6000610f8585858585611acd565b95945050505050565b6000610f9b848484611d83565b90505b9392505050565b60075460009015610fc857610fba600761134a565b6001600160e01b0316905090565b5060065490565b610fd7610804565b6001600160a01b0316336001600160a01b0316146110075760405162461bcd60e51b815260040161095e90613271565b30611010610804565b6001600160a01b0316146110525760008036604051611030929190613261565b604051809103902090505b8061104660026115e0565b146110505761103b565b505b6109bb81611e28565b6004805460008381526005602052604080822054905163d45c443560e01b8152938401529182916001600160a01b03169063d45c44359060240160206040518083038186803b1580156110ad57600080fd5b505afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190613324565b9050806001146110f55780610f9e565b60009392505050565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610d8d565b611135610804565b6001600160a01b0316336001600160a01b0316146111655760405162461bcd60e51b815260040161095e90613271565b3061116e610804565b6001600160a01b0316146111b0576000803660405161118e929190613261565b604051809103902090505b806111a460026115e0565b146111ae57611199565b505b600080856001600160a01b03168585856040516111ce929190613261565b60006040518083038185875af1925050503d806000811461120b576040519150601f19603f3d011682016040523d82523d6000602084013e611210565b606091505b5091509150611238828260405180606001604052806028815260200161379a60289139611e91565b50505050505050565b60008484848460405160200161125a9493929190613507565b60408051601f19818403018152919052805160209091012095945050505050565b6000610f9e838361129760408051602081019091526000815290565b611d83565b600061082882611eaa565b60006001600160e01b038211156113105760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161095e565b5090565b6000806113328461132443611388565b61132d866112a7565b611f63565b6001600160e01b0391821693501690505b9250929050565b805460009080156110f557611372836113646001846134da565b600091825260209091200190565b54600160201b90046001600160e01b0316610f9e565b600063ffffffff8211156113105760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161095e565b60006001600160e01b03198216636e665ced60e01b148061082857506108288261210d565b600061082861141f612178565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006114718787878761229f565b91509150610d5b81612363565b600085815260016020819052604082209061149888610e12565b60078111156114a9576114a9612e58565b146115025760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b606482015260840161095e565b604080516020810190915281546001600160401b03169081905260009061152b90889086611d83565b905061153a88888884886124b1565b835161158c57866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48988848960405161157f9493929190613552565b60405180910390a2610e07565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb871289888489896040516115cd95949392919061357a565b60405180910390a2979650505050505050565b60006115fb8254600f81810b600160801b909204900b131590565b1561161957604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60648111156116e25760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a40161095e565b60006116ec610fa5565b905080158015906116fd5750600754155b1561176157604080518082019091526000815260079060208101611720846112a7565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b61176c600783611314565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b306117b4610804565b6001600160a01b0316146118475760005b845181101561184557306001600160a01b03168582815181106117ea576117ea6134f1565b60200260200101516001600160a01b0316141561183557611835838281518110611816576118166134f1565b602002602001015180519060200120600261263090919063ffffffff16565b61183e816135c0565b90506117c5565b505b5050505050565b611847858585858561266c565b30611864610804565b6001600160a01b03161461184757600254600f81810b600160801b909204900b1315611847576000600255611847565b6000610f85858585856118b260408051602081019091526000815290565b61147e565b6000806118c3836126df565b905060048160078111156118d9576118d9612e58565b146118e45792915050565b600083815260056020526040902054806118ff575092915050565b60048054604051632ab0f52960e01b81529182018390526001600160a01b031690632ab0f5299060240160206040518083038186803b15801561194157600080fd5b505afa158015611955573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197991906135db565b15611988575060079392505050565b60048054604051632c258a9f60e11b81529182018390526001600160a01b03169063584b153e9060240160206040518083038186803b1580156119ca57600080fd5b505afa1580156119de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0291906135db565b15611a11575060059392505050565b5060029392505050565b6000438210611a6c5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564604482015260640161095e565b6000611a7783611388565b84549091506000611a8a868483856127eb565b90508015611ab757611aa1866113646001846134da565b54600160201b90046001600160e01b0316611aba565b60005b6001600160e01b03169695505050505050565b600080611adf3361077f6001436134da565b1015611b475760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b606482015260840161095e565b6000611b5c8686868680519060200120611241565b90508451865114611b7f5760405162461bcd60e51b815260040161095e906135fd565b8351865114611ba05760405162461bcd60e51b815260040161095e906135fd565b6000865111611bf15760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c0000000000000000604482015260640161095e565b600081815260016020908152604091829020825191820190925281546001600160401b03169081905215611c715760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b606482015260840161095e565b6000611c7d6001612849565b611c8643612849565b611c90919061363e565b90506000611c9f61b2fa612849565b611ca9908361363e565b835467ffffffffffffffff19166001600160401b038416178455905060018301805467ffffffffffffffff19166001600160401b0383161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b03811115611d2157611d216129ae565b604051908082528060200260200182016040528015611d5457816020015b6060815260200190600190039081611d3f5790505b508c88888e604051611d6e99989796959493929190613669565b60405180910390a15091979650505050505050565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b158015611df057600080fd5b505afa158015611e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9b9190613324565b600454604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b60608315611ea0575081610f9e565b610f9e83836128b1565b60006064611eb783610e90565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b158015611f1757600080fd5b505afa158015611f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4f9190613324565b611f599190613758565b6108289190613777565b8254600090819080156120b0576000611f81876113646001856134da565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090871610156120025760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b6579000000000000000000604482015260640161095e565b8563ffffffff16816000015163ffffffff161415612051578461202a886113646001866134da565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790556120a0565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160201b029216919091179101555b6020015192508391506121059050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160201b0291909316179201919091559050815b935093915050565b60006001600160e01b0319821663bf26d89760e01b148061213e57506001600160e01b031982166379dd796f60e01b145b8061215957506001600160e01b03198216630271189760e51b145b8061082857506301ffc9a760e01b6001600160e01b0319831614610828565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156121d157507f000000000000000000000000000000000000000000000000000000000000000046145b156121fb57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156122d6575060009050600361235a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561232a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166123535760006001925092505061235a565b9150600090505b94509492505050565b600081600481111561237757612377612e58565b14156123805750565b600181600481111561239457612394612e58565b14156123e25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161095e565b60028160048111156123f6576123f6612e58565b14156124445760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161095e565b600381600481111561245857612458612e58565b14156109bb5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161095e565b60008581526008602090815260408083206001600160a01b0388168452600381019092529091205460ff16156125395760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b606482015260840161095e565b6001600160a01b03851660009081526003820160205260408120805460ff1916600117905560ff168460ff16141561258a578281600001600082825461257f91906134c2565b909155506118459050565b60ff8416600114156125aa578281600101600082825461257f91906134c2565b60ff8416600214156125ca578281600201600082825461257f91906134c2565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b606482015260840161095e565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b6004805460405163e38335e560e01b81526001600160a01b039091169163e38335e59134916126a6918991899189916000918a9101613406565b6000604051808303818588803b1580156126bf57600080fd5b505af11580156126d3573d6000803e3d6000fd5b50505050505050505050565b6000818152600160205260408120600281015460ff16156127035750600792915050565b6002810154610100900460ff161561271e5750600292915050565b600061272984610d65565b9050806127785760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964000000604482015260640161095e565b438110612789575060009392505050565b6000612794856110fe565b90504381106127a857506001949350505050565b6127b1856128db565b80156127d0575060008581526008602052604090208054600190910154115b156127e057506004949350505050565b506003949350505050565b60005b818310156128415760006128028484612912565b60008781526020902090915063ffffffff86169082015463ffffffff16111561282d5780925061283b565b6128388160016134c2565b93505b506127ee565b509392505050565b60006001600160401b038211156113105760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b606482015260840161095e565b8151156128c15781518083602001fd5b8060405162461bcd60e51b815260040161095e9190612b77565b6000818152600860205260408120600281015460018201546128fd91906134c2565b6129096107cb85610d65565b11159392505050565b60006129216002848418613777565b610f9e908484166134c2565b60006020828403121561293f57600080fd5b81356001600160e01b031981168114610f9e57600080fd5b803560ff8116811461296857600080fd5b919050565b60008083601f84011261297f57600080fd5b5081356001600160401b0381111561299657600080fd5b60208301915083602082850101111561134357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156129ec576129ec6129ae565b604052919050565b60006001600160401b03831115612a0d57612a0d6129ae565b612a20601f8401601f19166020016129c4565b9050828152838383011115612a3457600080fd5b828260208301376000602084830101529392505050565b600082601f830112612a5c57600080fd5b610f9e838335602085016129f4565b60008060008060008060008060e0898b031215612a8757600080fd5b88359750612a9760208a01612957565b965060408901356001600160401b0380821115612ab357600080fd5b612abf8c838d0161296d565b909850965060608b0135915080821115612ad857600080fd5b50612ae58b828c01612a4b565b945050612af460808a01612957565b925060a0890135915060c089013590509295985092959890939650565b600060208284031215612b2357600080fd5b5035919050565b6000815180845260005b81811015612b5057602081850181015186830182015201612b34565b81811115612b62576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f9e6020830184612b2a565b6001600160a01b03811681146109bb57600080fd5b60008060008060808587031215612bb557600080fd5b8435612bc081612b8a565b93506020850135612bd081612b8a565b92506040850135915060608501356001600160401b03811115612bf257600080fd5b612bfe87828801612a4b565b91505092959194509250565b60006001600160401b03821115612c2357612c236129ae565b5060051b60200190565b600082601f830112612c3e57600080fd5b81356020612c53612c4e83612c0a565b6129c4565b82815260059290921b84018101918181019086841115612c7257600080fd5b8286015b84811015612c96578035612c8981612b8a565b8352918301918301612c76565b509695505050505050565b600082601f830112612cb257600080fd5b81356020612cc2612c4e83612c0a565b82815260059290921b84018101918181019086841115612ce157600080fd5b8286015b84811015612c965780358352918301918301612ce5565b600082601f830112612d0d57600080fd5b81356020612d1d612c4e83612c0a565b82815260059290921b84018101918181019086841115612d3c57600080fd5b8286015b84811015612c965780356001600160401b03811115612d5f5760008081fd5b612d6d8986838b0101612a4b565b845250918301918301612d40565b60008060008060808587031215612d9157600080fd5b84356001600160401b0380821115612da857600080fd5b612db488838901612c2d565b95506020870135915080821115612dca57600080fd5b612dd688838901612ca1565b94506040870135915080821115612dec57600080fd5b50612df987828801612cfc565b949793965093946060013593505050565b600080600080600060a08688031215612e2257600080fd5b85359450612e3260208701612957565b9350612e4060408701612957565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b6020810160088310612e9057634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612ea957600080fd5b823591506020830135612ebb81612b8a565b809150509250929050565b60008060408385031215612ed957600080fd5b82359150612ee960208401612957565b90509250929050565b600080600080600060808688031215612f0a57600080fd5b85359450612f1a60208701612957565b935060408601356001600160401b0380821115612f3657600080fd5b612f4289838a0161296d565b90955093506060880135915080821115612f5b57600080fd5b50612f6888828901612a4b565b9150509295509295909350565b60008060008060608587031215612f8b57600080fd5b84359350612f9b60208601612957565b925060408501356001600160401b03811115612fb657600080fd5b612fc28782880161296d565b95989497509550505050565b60008060008060808587031215612fe457600080fd5b84356001600160401b0380821115612ffb57600080fd5b61300788838901612c2d565b9550602087013591508082111561301d57600080fd5b61302988838901612ca1565b9450604087013591508082111561303f57600080fd5b61304b88838901612cfc565b9350606087013591508082111561306157600080fd5b508501601f8101871361307357600080fd5b612bfe878235602084016129f4565b60008060006060848603121561309757600080fd5b83356130a281612b8a565b92506020840135915060408401356001600160401b038111156130c457600080fd5b6130d086828701612a4b565b9150509250925092565b6000602082840312156130ec57600080fd5b8135610f9e81612b8a565b600080600080600060a0868803121561310f57600080fd5b853561311a81612b8a565b9450602086013561312a81612b8a565b935060408601356001600160401b038082111561314657600080fd5b61315289838a01612ca1565b9450606088013591508082111561316857600080fd5b61317489838a01612ca1565b93506080880135915080821115612f5b57600080fd5b600080600080606085870312156131a057600080fd5b84356131ab81612b8a565b93506020850135925060408501356001600160401b03811115612fb657600080fd5b600080604083850312156131e057600080fd5b82356131eb81612b8a565b946020939093013593505050565b600080600080600060a0868803121561321157600080fd5b853561321c81612b8a565b9450602086013561322c81612b8a565b9350604086013592506060860135915060808601356001600160401b0381111561325557600080fd5b612f6888828901612a4b565b8183823760009101908152919050565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b600181811c908216806132bc57607f821691505b602082108114156132dd57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756040820152601b60fa1b606082015260800190565b60006020828403121561333657600080fd5b5051919050565b600081518084526020808501945080840160005b838110156133765781516001600160a01b031687529582019590820190600101613351565b509495945050505050565b600081518084526020808501945080840160005b8381101561337657815187529582019590820190600101613395565b600081518084526020808501808196508360051b8101915082860160005b858110156133f95782840389526133e7848351612b2a565b988501989350908401906001016133cf565b5091979650505050505050565b60a08152600061341960a083018861333d565b828103602084015261342b8188613381565b9050828103604084015261343f81876133b1565b60608401959095525050608001529392505050565b60c08152600061346760c083018961333d565b82810360208401526134798189613381565b9050828103604084015261348d81886133b1565b60608401969096525050608081019290925260a0909101529392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156134d5576134d56134ac565b500190565b6000828210156134ec576134ec6134ac565b500390565b634e487b7160e01b600052603260045260246000fd5b60808152600061351a608083018761333d565b828103602084015261352c8187613381565b9050828103604084015261354081866133b1565b91505082606083015295945050505050565b84815260ff84166020820152826040820152608060608201526000610f6d6080830184612b2a565b85815260ff8516602082015283604082015260a0606082015260006135a260a0830185612b2a565b82810360808401526135b48185612b2a565b98975050505050505050565b60006000198214156135d4576135d46134ac565b5060010190565b6000602082840312156135ed57600080fd5b81518015158114610f9e57600080fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60006001600160401b03808316818516808303821115613660576136606134ac565b01949350505050565b60006101208b8352602060018060a01b038c16818501528160408501526136928285018c61333d565b915083820360608501526136a6828b613381565b915083820360808501528189518084528284019150828160051b850101838c0160005b838110156136f757601f198784030185526136e5838351612b2a565b948601949250908501906001016136c9565b505086810360a088015261370b818c6133b1565b94505050505061372660c08401876001600160401b03169052565b6001600160401b03851660e08401528281036101008401526137488185612b2a565b9c9b505050505050505050505050565b6000816000190483118215151615613772576137726134ac565b500290565b60008261379457634e487b7160e01b600052601260045260246000fd5b50049056fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765a26469706673582212205f27d17b985635d76602bdebeebc65446fee5ed8b0d2fbb596c6f1647d2b82c564736f6c63430008090033";

    public static final String FUNC_BALLOT_TYPEHASH = "BALLOT_TYPEHASH";

    public static final String FUNC_COUNTING_MODE = "COUNTING_MODE";

    public static final String FUNC_EXTENDED_BALLOT_TYPEHASH = "EXTENDED_BALLOT_TYPEHASH";

    public static final String FUNC_CASTVOTE = "castVote";

    public static final String FUNC_CASTVOTEBYSIG = "castVoteBySig";

    public static final String FUNC_CASTVOTEWITHREASON = "castVoteWithReason";

    public static final String FUNC_CASTVOTEWITHREASONANDPARAMS = "castVoteWithReasonAndParams";

    public static final String FUNC_CASTVOTEWITHREASONANDPARAMSBYSIG = "castVoteWithReasonAndParamsBySig";

    public static final String FUNC_EXECUTE = "execute";

    public static final String FUNC_GETVOTES = "getVotes";

    public static final String FUNC_GETVOTESWITHPARAMS = "getVotesWithParams";

    public static final String FUNC_HASVOTED = "hasVoted";

    public static final String FUNC_HASHPROPOSAL = "hashProposal";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_ONERC1155BATCHRECEIVED = "onERC1155BatchReceived";

    public static final String FUNC_ONERC1155RECEIVED = "onERC1155Received";

    public static final String FUNC_ONERC721RECEIVED = "onERC721Received";

    public static final String FUNC_PROPOSALDEADLINE = "proposalDeadline";

    public static final String FUNC_PROPOSALETA = "proposalEta";

    public static final String FUNC_PROPOSALSNAPSHOT = "proposalSnapshot";

    public static final String FUNC_PROPOSALTHRESHOLD = "proposalThreshold";

    public static final String FUNC_PROPOSALVOTES = "proposalVotes";

    public static final String FUNC_PROPOSE = "propose";

    public static final String FUNC_QUEUE = "queue";

    public static final String FUNC_QUORUM = "quorum";

    public static final String FUNC_QUORUMDENOMINATOR = "quorumDenominator";

    public static final String FUNC_quorumNumerator = "quorumNumerator";

    public static final String FUNC_RELAY = "relay";

    public static final String FUNC_STATE = "state";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TIMELOCK = "timelock";

    public static final String FUNC_TOKEN = "token";

    public static final String FUNC_UPDATEQUORUMNUMERATOR = "updateQuorumNumerator";

    public static final String FUNC_UPDATETIMELOCK = "updateTimelock";

    public static final String FUNC_VERSION = "version";

    public static final String FUNC_VOTINGDELAY = "votingDelay";

    public static final String FUNC_VOTINGPERIOD = "votingPeriod";

    public static final Event PROPOSALCANCELED_EVENT = new Event("ProposalCanceled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PROPOSALCREATED_EVENT = new Event("ProposalCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<DynamicArray<Address>>() {}, new TypeReference<DynamicArray<Uint256>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event PROPOSALEXECUTED_EVENT = new Event("ProposalExecuted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PROPOSALQUEUED_EVENT = new Event("ProposalQueued", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event QUORUMNUMERATORUPDATED_EVENT = new Event("QuorumNumeratorUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event TIMELOCKCHANGE_EVENT = new Event("TimelockChange", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event VOTECAST_EVENT = new Event("VoteCast", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event VOTECASTWITHPARAMS_EVENT = new Event("VoteCastWithParams", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<DynamicBytes>() {}));
    ;

    @Deprecated
    protected MyGovernor1(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected MyGovernor1(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected MyGovernor1(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected MyGovernor1(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<ProposalCanceledEventResponse> getProposalCanceledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALCANCELED_EVENT, transactionReceipt);
        ArrayList<ProposalCanceledEventResponse> responses = new ArrayList<ProposalCanceledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalCanceledEventResponse typedResponse = new ProposalCanceledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalCanceledEventResponse> proposalCanceledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalCanceledEventResponse>() {
            @Override
            public ProposalCanceledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALCANCELED_EVENT, log);
                ProposalCanceledEventResponse typedResponse = new ProposalCanceledEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalCanceledEventResponse> proposalCanceledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALCANCELED_EVENT));
        return proposalCanceledEventFlowable(filter);
    }

    public static List<ProposalCreatedEventResponse> getProposalCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALCREATED_EVENT, transactionReceipt);
        ArrayList<ProposalCreatedEventResponse> responses = new ArrayList<ProposalCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalCreatedEventResponse typedResponse = new ProposalCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.proposer = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.targets = (List<String>) ((Array) eventValues.getNonIndexedValues().get(2)).getNativeValueCopy();
            typedResponse.values = (List<BigInteger>) ((Array) eventValues.getNonIndexedValues().get(3)).getNativeValueCopy();
            typedResponse.signatures = (List<String>) ((Array) eventValues.getNonIndexedValues().get(4)).getNativeValueCopy();
            typedResponse.calldatas = (List<byte[]>) ((Array) eventValues.getNonIndexedValues().get(5)).getNativeValueCopy();
            typedResponse.startBlock = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.endBlock = (BigInteger) eventValues.getNonIndexedValues().get(7).getValue();
            typedResponse.description = (String) eventValues.getNonIndexedValues().get(8).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalCreatedEventResponse> proposalCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalCreatedEventResponse>() {
            @Override
            public ProposalCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALCREATED_EVENT, log);
                ProposalCreatedEventResponse typedResponse = new ProposalCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.proposer = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.targets = (List<String>) ((Array) eventValues.getNonIndexedValues().get(2)).getNativeValueCopy();
                typedResponse.values = (List<BigInteger>) ((Array) eventValues.getNonIndexedValues().get(3)).getNativeValueCopy();
                typedResponse.signatures = (List<String>) ((Array) eventValues.getNonIndexedValues().get(4)).getNativeValueCopy();
                typedResponse.calldatas = (List<byte[]>) ((Array) eventValues.getNonIndexedValues().get(5)).getNativeValueCopy();
                typedResponse.startBlock = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
                typedResponse.endBlock = (BigInteger) eventValues.getNonIndexedValues().get(7).getValue();
                typedResponse.description = (String) eventValues.getNonIndexedValues().get(8).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalCreatedEventResponse> proposalCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALCREATED_EVENT));
        return proposalCreatedEventFlowable(filter);
    }

    public static List<ProposalExecutedEventResponse> getProposalExecutedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALEXECUTED_EVENT, transactionReceipt);
        ArrayList<ProposalExecutedEventResponse> responses = new ArrayList<ProposalExecutedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalExecutedEventResponse typedResponse = new ProposalExecutedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalExecutedEventResponse> proposalExecutedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalExecutedEventResponse>() {
            @Override
            public ProposalExecutedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALEXECUTED_EVENT, log);
                ProposalExecutedEventResponse typedResponse = new ProposalExecutedEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalExecutedEventResponse> proposalExecutedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALEXECUTED_EVENT));
        return proposalExecutedEventFlowable(filter);
    }

    public static List<ProposalQueuedEventResponse> getProposalQueuedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALQUEUED_EVENT, transactionReceipt);
        ArrayList<ProposalQueuedEventResponse> responses = new ArrayList<ProposalQueuedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalQueuedEventResponse typedResponse = new ProposalQueuedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.eta = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalQueuedEventResponse> proposalQueuedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalQueuedEventResponse>() {
            @Override
            public ProposalQueuedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALQUEUED_EVENT, log);
                ProposalQueuedEventResponse typedResponse = new ProposalQueuedEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.eta = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalQueuedEventResponse> proposalQueuedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALQUEUED_EVENT));
        return proposalQueuedEventFlowable(filter);
    }

    public static List<QuorumNumeratorUpdatedEventResponse> getQuorumNumeratorUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(QUORUMNUMERATORUPDATED_EVENT, transactionReceipt);
        ArrayList<QuorumNumeratorUpdatedEventResponse> responses = new ArrayList<QuorumNumeratorUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            QuorumNumeratorUpdatedEventResponse typedResponse = new QuorumNumeratorUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldQuorumNumerator = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newQuorumNumerator = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<QuorumNumeratorUpdatedEventResponse> quorumNumeratorUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, QuorumNumeratorUpdatedEventResponse>() {
            @Override
            public QuorumNumeratorUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(QUORUMNUMERATORUPDATED_EVENT, log);
                QuorumNumeratorUpdatedEventResponse typedResponse = new QuorumNumeratorUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.oldQuorumNumerator = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newQuorumNumerator = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<QuorumNumeratorUpdatedEventResponse> quorumNumeratorUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(QUORUMNUMERATORUPDATED_EVENT));
        return quorumNumeratorUpdatedEventFlowable(filter);
    }

    public static List<TimelockChangeEventResponse> getTimelockChangeEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(TIMELOCKCHANGE_EVENT, transactionReceipt);
        ArrayList<TimelockChangeEventResponse> responses = new ArrayList<TimelockChangeEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TimelockChangeEventResponse typedResponse = new TimelockChangeEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldTimelock = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newTimelock = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TimelockChangeEventResponse> timelockChangeEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TimelockChangeEventResponse>() {
            @Override
            public TimelockChangeEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TIMELOCKCHANGE_EVENT, log);
                TimelockChangeEventResponse typedResponse = new TimelockChangeEventResponse();
                typedResponse.log = log;
                typedResponse.oldTimelock = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newTimelock = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TimelockChangeEventResponse> timelockChangeEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TIMELOCKCHANGE_EVENT));
        return timelockChangeEventFlowable(filter);
    }

    public static List<VoteCastEventResponse> getVoteCastEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTECAST_EVENT, transactionReceipt);
        ArrayList<VoteCastEventResponse> responses = new ArrayList<VoteCastEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteCastEventResponse typedResponse = new VoteCastEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VoteCastEventResponse> voteCastEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VoteCastEventResponse>() {
            @Override
            public VoteCastEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTECAST_EVENT, log);
                VoteCastEventResponse typedResponse = new VoteCastEventResponse();
                typedResponse.log = log;
                typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VoteCastEventResponse> voteCastEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTECAST_EVENT));
        return voteCastEventFlowable(filter);
    }

    public static List<VoteCastWithParamsEventResponse> getVoteCastWithParamsEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTECASTWITHPARAMS_EVENT, transactionReceipt);
        ArrayList<VoteCastWithParamsEventResponse> responses = new ArrayList<VoteCastWithParamsEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteCastWithParamsEventResponse typedResponse = new VoteCastWithParamsEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.params = (byte[]) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VoteCastWithParamsEventResponse> voteCastWithParamsEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VoteCastWithParamsEventResponse>() {
            @Override
            public VoteCastWithParamsEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTECASTWITHPARAMS_EVENT, log);
                VoteCastWithParamsEventResponse typedResponse = new VoteCastWithParamsEventResponse();
                typedResponse.log = log;
                typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.params = (byte[]) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VoteCastWithParamsEventResponse> voteCastWithParamsEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTECASTWITHPARAMS_EVENT));
        return voteCastWithParamsEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> BALLOT_TYPEHASH() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BALLOT_TYPEHASH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> COUNTING_MODE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_COUNTING_MODE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<byte[]> EXTENDED_BALLOT_TYPEHASH() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTENDED_BALLOT_TYPEHASH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> castVote(BigInteger proposalId, BigInteger support) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteBySig(BigInteger proposalId, BigInteger support, BigInteger v, byte[] r, byte[] s) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEBYSIG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.generated.Uint8(v), 
                new org.web3j.abi.datatypes.generated.Bytes32(r), 
                new org.web3j.abi.datatypes.generated.Bytes32(s)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteWithReason(BigInteger proposalId, BigInteger support, String reason) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEWITHREASON, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.Utf8String(reason)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteWithReasonAndParams(BigInteger proposalId, BigInteger support, String reason, byte[] params) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEWITHREASONANDPARAMS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.Utf8String(reason), 
                new org.web3j.abi.datatypes.DynamicBytes(params)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteWithReasonAndParamsBySig(BigInteger proposalId, BigInteger support, String reason, byte[] params, BigInteger v, byte[] r, byte[] s) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEWITHREASONANDPARAMSBYSIG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.Utf8String(reason), 
                new org.web3j.abi.datatypes.DynamicBytes(params), 
                new org.web3j.abi.datatypes.generated.Uint8(v), 
                new org.web3j.abi.datatypes.generated.Bytes32(r), 
                new org.web3j.abi.datatypes.generated.Bytes32(s)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> execute(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, byte[] descriptionHash, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXECUTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.generated.Bytes32(descriptionHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<BigInteger> getVotes(String account, BigInteger blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account), 
                new org.web3j.abi.datatypes.generated.Uint256(blockNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getVotesWithParams(String account, BigInteger blockNumber, byte[] params) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETVOTESWITHPARAMS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account), 
                new org.web3j.abi.datatypes.generated.Uint256(blockNumber), 
                new org.web3j.abi.datatypes.DynamicBytes(params)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> hasVoted(BigInteger proposalId, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASVOTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> hashProposal(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, byte[] descriptionHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASHPROPOSAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.generated.Bytes32(descriptionHash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> onERC1155BatchReceived(String param0, String param1, List<BigInteger> param2, List<BigInteger> param3, byte[] param4) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ONERC1155BATCHRECEIVED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(param2, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(param3, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicBytes(param4)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> onERC1155Received(String param0, String param1, BigInteger param2, BigInteger param3, byte[] param4) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ONERC1155RECEIVED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1), 
                new org.web3j.abi.datatypes.generated.Uint256(param2), 
                new org.web3j.abi.datatypes.generated.Uint256(param3), 
                new org.web3j.abi.datatypes.DynamicBytes(param4)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> onERC721Received(String param0, String param1, BigInteger param2, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ONERC721RECEIVED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1), 
                new org.web3j.abi.datatypes.generated.Uint256(param2), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> proposalDeadline(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALDEADLINE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> proposalEta(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALETA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> proposalSnapshot(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALSNAPSHOT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> proposalThreshold() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALTHRESHOLD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>> proposalVotes(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> propose(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PROPOSE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> queue(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, byte[] descriptionHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_QUEUE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.generated.Bytes32(descriptionHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> quorum(BigInteger blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_QUORUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(blockNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> quorumDenominator() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_QUORUMDENOMINATOR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> quorumNumerator(BigInteger blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_quorumNumerator, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(blockNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> quorumNumerator() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_quorumNumerator, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> relay(String target, BigInteger value, byte[] data, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RELAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, target), 
                new org.web3j.abi.datatypes.generated.Uint256(value), 
                new org.web3j.abi.datatypes.DynamicBytes(data)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<BigInteger> state(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_STATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> timelock() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TIMELOCK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> token() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKEN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> updateQuorumNumerator(BigInteger newQuorumNumerator) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATEQUORUMNUMERATOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(newQuorumNumerator)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateTimelock(String newTimelock) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATETIMELOCK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newTimelock)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> version() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> votingDelay() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTINGDELAY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> votingPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTINGPERIOD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static MyGovernor1 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new MyGovernor1(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static MyGovernor1 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new MyGovernor1(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static MyGovernor1 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new MyGovernor1(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static MyGovernor1 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new MyGovernor1(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<MyGovernor1> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _token, String _timelock) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _token), 
                new org.web3j.abi.datatypes.Address(160, _timelock)));
        return deployRemoteCall(MyGovernor1.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<MyGovernor1> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _token, String _timelock) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _token), 
                new org.web3j.abi.datatypes.Address(160, _timelock)));
        return deployRemoteCall(MyGovernor1.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<MyGovernor1> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _token, String _timelock) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _token), 
                new org.web3j.abi.datatypes.Address(160, _timelock)));
        return deployRemoteCall(MyGovernor1.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<MyGovernor1> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _token, String _timelock) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _token), 
                new org.web3j.abi.datatypes.Address(160, _timelock)));
        return deployRemoteCall(MyGovernor1.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class ProposalCanceledEventResponse extends BaseEventResponse {
        public BigInteger proposalId;
    }

    public static class ProposalCreatedEventResponse extends BaseEventResponse {
        public BigInteger proposalId;

        public String proposer;

        public List<String> targets;

        public List<BigInteger> values;

        public List<String> signatures;

        public List<byte[]> calldatas;

        public BigInteger startBlock;

        public BigInteger endBlock;

        public String description;
    }

    public static class ProposalExecutedEventResponse extends BaseEventResponse {
        public BigInteger proposalId;
    }

    public static class ProposalQueuedEventResponse extends BaseEventResponse {
        public BigInteger proposalId;

        public BigInteger eta;
    }

    public static class QuorumNumeratorUpdatedEventResponse extends BaseEventResponse {
        public BigInteger oldQuorumNumerator;

        public BigInteger newQuorumNumerator;
    }

    public static class TimelockChangeEventResponse extends BaseEventResponse {
        public String oldTimelock;

        public String newTimelock;
    }

    public static class VoteCastEventResponse extends BaseEventResponse {
        public String voter;

        public BigInteger proposalId;

        public BigInteger support;

        public BigInteger weight;

        public String reason;
    }

    public static class VoteCastWithParamsEventResponse extends BaseEventResponse {
        public String voter;

        public BigInteger proposalId;

        public BigInteger support;

        public BigInteger weight;

        public String reason;

        public byte[] params;
    }
}
