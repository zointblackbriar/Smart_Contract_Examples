package de.tudresden.webofthingstokenization.externalsmartcontractlibrary;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Array;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.generated.Uint96;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple10;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.4.
 */
@SuppressWarnings("rawtypes")
public class GovernorCompatibilityBravoMock extends Contract {
    public static final String BINARY = "6101606040523480156200001257600080fd5b506040516200526a3803806200526a8339810160408190526200003591620003be565b84818585858a806200005b6040805180820190915260018152603160f81b602082015290565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c0526101205250508251620001019250600091506020840190620002e5565b506200010f90508362000154565b6200011a8262000195565b62000125816200023b565b50505062000139816200027c60201b60201c565b506001600160a01b031661014052506200051a945050505050565b60055460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600555565b60008111620001fa5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b606482015260840160405180910390fd5b60065460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600655565b60075460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600755565b600854604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b828054620002f390620004dd565b90600052602060002090601f01602090048101928262000317576000855562000362565b82601f106200033257805160ff191683800117855562000362565b8280016001018555821562000362579182015b828111156200036257825182559160200191906001019062000345565b506200037092915062000374565b5090565b5b8082111562000370576000815560010162000375565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620003b957600080fd5b919050565b60008060008060008060c08789031215620003d857600080fd5b86516001600160401b0380821115620003f057600080fd5b818901915089601f8301126200040557600080fd5b8151818111156200041a576200041a6200038b565b604051601f8201601f19908116603f011681019083821181831017156200044557620004456200038b565b81604052828152602093508c848487010111156200046257600080fd5b600091505b8282101562000486578482018401518183018501529083019062000467565b82821115620004985760008484830101525b9950620004aa915050898201620003a1565b96505050604087015193506060870151925060808701519150620004d160a08801620003a1565b90509295509295509295565b600181811c90821680620004f257607f821691505b602082108114156200051457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051614cee6200057c600039600081816109f9015261279b01526000612b6a01526000612bb901526000612b9401526000612aed01526000612b1701526000612b410152614cee6000f3fe6080604052600436106102815760003560e01c80637d5e81e21161014f578063da95691a116100c1578063eb9019d41161007a578063eb9019d41461095a578063ece40cc11461097a578063f23a6e611461099a578063f8ce560a146109c6578063fc0c546a146109e7578063fe0d94c114610a1b57600080fd5b8063da95691a146107b6578063dd4e2ba5146107d6578063ddf0b0091461081c578063deaaa7cc1461083c578063e23a9a5214610870578063ea0217cf1461093a57600080fd5b8063b9a6196111610113578063b9a61961146106f0578063bc197c8114610705578063c01f9e3714610731578063c28bc2fa14610751578063c59057e414610764578063d33219b41461078457600080fd5b80637d5e81e21461065b5780639a802a6d1461067b578063a890c9101461069b578063ab58fb8e146106bb578063b58131b0146106db57600080fd5b8063328dd982116101f3578063452115d6116101ac578063452115d61461059157806354fd4d50146105b157806356781388146105db5780635f398a14146105fb57806370b0f6601461061b5780637b3c71d31461063b57600080fd5b8063328dd982146104955780633932abb1146104c55780633bccf4fd146104da5780633e4f49e6146104fa57806340e58ee514610527578063438596321461054757600080fd5b8063150b7a0211610245578063150b7a02146103b5578063160cbed7146103f957806324bc1a64146104195780632656227d1461042e5780632d63f693146104415780632fe3e2611461046157600080fd5b8063013cf08b146102a957806301ffc9a71461032457806302a251a314610354578063034201811461037357806306fdde031461039357600080fd5b366102a4573061028f610a2e565b6001600160a01b0316146102a257600080fd5b005b600080fd5b3480156102b557600080fd5b506102c96102c4366004613ce1565b610a47565b604080519a8b526001600160a01b0390991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e084015215156101008301521515610120820152610140015b60405180910390f35b34801561033057600080fd5b5061034461033f366004613cfa565b610af0565b604051901515815260200161031b565b34801561036057600080fd5b506006545b60405190815260200161031b565b34801561037f57600080fd5b5061036561038e366004613e45565b610b01565b34801561039f57600080fd5b506103a8610bf9565b60405161031b9190613f43565b3480156103c157600080fd5b506103e06103d0366004613f6b565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161031b565b34801561040557600080fd5b50610365610414366004614142565b610c8b565b34801561042557600080fd5b50610365610ca2565b61036561043c366004614142565b610cb2565b34801561044d57600080fd5b5061036561045c366004613ce1565b610cc0565b34801561046d57600080fd5b506103657fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b3480156104a157600080fd5b506104b56104b0366004613ce1565b610cf7565b60405161031b9493929190614297565b3480156104d157600080fd5b50600554610365565b3480156104e657600080fd5b506103656104f53660046142e4565b610f88565b34801561050657600080fd5b5061051a610515366004613ce1565b610ffe565b60405161031b9190614348565b34801561053357600080fd5b506102a2610542366004613ce1565b611009565b34801561055357600080fd5b50610344610562366004614370565b60008281526004602090815260408083206001600160a01b038516845260080190915290205460ff1692915050565b34801561059d57600080fd5b506103656105ac366004614142565b611326565b3480156105bd57600080fd5b506040805180820190915260018152603160f81b60208201526103a8565b3480156105e757600080fd5b506103656105f63660046143a0565b611334565b34801561060757600080fd5b506103656106163660046143cc565b61135d565b34801561062757600080fd5b506102a2610636366004613ce1565b6113a7565b34801561064757600080fd5b5061036561065636600461444f565b611436565b34801561066757600080fd5b506103656106763660046144a8565b611488565b34801561068757600080fd5b50610365610696366004614548565b611496565b3480156106a757600080fd5b506102a26106b63660046145a0565b6114ad565b3480156106c757600080fd5b506103656106d6366004613ce1565b611539565b3480156106e757600080fd5b50610365611544565b3480156106fc57600080fd5b506102a261154f565b34801561071157600080fd5b506103e06107203660046145bd565b63bc197c8160e01b95945050505050565b34801561073d57600080fd5b5061036561074c366004613ce1565b6115b9565b6102a261075f366004614650565b6115e8565b34801561077057600080fd5b5061036561077f366004614142565b6116fc565b34801561079057600080fd5b506008546001600160a01b03165b6040516001600160a01b03909116815260200161031b565b3480156107c257600080fd5b506103656107d1366004614712565b611736565b3480156107e257600080fd5b5060408051808201909152601a81527f737570706f72743d627261766f2671756f72756d3d627261766f00000000000060208201526103a8565b34801561082857600080fd5b506102a2610837366004613ce1565b61175b565b34801561084857600080fd5b506103657f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561087c57600080fd5b5061090a61088b366004614370565b60408051606081018252600080825260208201819052918101919091525060009182526004602090815260408084206001600160a01b0393909316845260089092018152918190208151606081018352905460ff8082161515835261010082041693820193909352620100009092046001600160601b03169082015290565b6040805182511515815260208084015160ff1690820152918101516001600160601b03169082015260600161031b565b34801561094657600080fd5b506102a2610955366004613ce1565b6119c9565b34801561096657600080fd5b506103656109753660046147b3565b611a55565b34801561098657600080fd5b506102a2610995366004613ce1565b611a76565b3480156109a657600080fd5b506103e06109b53660046147df565b63f23a6e6160e01b95945050505050565b3480156109d257600080fd5b506103656109e1366004613ce1565b50600090565b3480156109f357600080fd5b5061079e7f000000000000000000000000000000000000000000000000000000000000000081565b6102a2610a29366004613ce1565b611b02565b6000610a426008546001600160a01b031690565b905090565b8060008080808080808080610a5b8a611539565b9750610a668b610cc0565b9650610a718b6115b9565b60008c815260046020526040812080546005820154600683015460078401546001600160a01b039093169e50949a509850929650919450610ab18d610ffe565b90506002816007811115610ac757610ac7614332565b1493506007816007811115610ade57610ade614332565b14925050509193959799509193959799565b6000610afb82611d70565b92915050565b600080610ba5610b9d7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c604051610b3d929190614847565b60405180910390208b80519060200120604051602001610b82959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b60405160208183030381529060405280519060200120611d95565b868686611de3565b9050610beb8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d9250611e0b915050565b9a9950505050505050505050565b606060008054610c0890614857565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3490614857565b8015610c815780601f10610c5657610100808354040283529160200191610c81565b820191906000526020600020905b815481529060010190602001808311610c6457829003601f168201915b5050505050905090565b6000610c9985858585611f6d565b95945050505050565b6000610a426109e16001436148a8565b6000610c9985858585612314565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b60608060608060006004600087815260200190815260200160002090508060010181600201826003018360040183805480602002602001604051908101604052809291908181526020018280548015610d7957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d5b575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610dcb57602002820191906000526020600020905b815481526020019060010190808311610db7575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610e9f578382906000526020600020018054610e1290614857565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3e90614857565b8015610e8b5780601f10610e6057610100808354040283529160200191610e8b565b820191906000526020600020905b815481529060010190602001808311610e6e57829003601f168201915b505050505081526020019060010190610df3565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610f72578382906000526020600020018054610ee590614857565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1190614857565b8015610f5e5780601f10610f3357610100808354040283529160200191610f5e565b820191906000526020600020905b815481529060010190602001808311610f4157829003601f168201915b505050505081526020019060010190610ec6565b5050505090509450945094509450509193509193565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610fd690610b9d90608001610b82565b9050610ff3878288604051806020016040528060008152506123f7565b979650505050505050565b6000610afb8261241a565b600081815260046020526040902080546001600160a01b0316336001600160a01b03161480611057575061103b611544565b8154611055906001600160a01b03166109756001436148a8565b105b6110b85760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72427261766f3a2070726f706f7365722061626f76652074686044820152661c995cda1bdb1960ca1b60648201526084015b60405180910390fd5b6113218160010180548060200260200160405190810160405280929190818152602001828054801561111357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110f5575b50505050508260020180548060200260200160405190810160405280929190818152602001828054801561116657602002820191906000526020600020905b815481526020019060010190808311611152575b505050505061131784600301805480602002602001604051908101604052809291908181526020016000905b8282101561123e5783829060005260206000200180546111b190614857565b80601f01602080910402602001604051908101604052809291908181526020018280546111dd90614857565b801561122a5780601f106111ff5761010080835404028352916020019161122a565b820191906000526020600020905b81548152906001019060200180831161120d57829003601f168201915b505050505081526020019060010190611192565b50505060048701805460408051602080840282018101909252828152935060009084015b8282101561130e57838290600052602060002001805461128190614857565b80601f01602080910402602001604051908101604052809291908181526020018280546112ad90614857565b80156112fa5780601f106112cf576101008083540402835291602001916112fa565b820191906000526020600020905b8154815290600101906020018083116112dd57829003601f168201915b505050505081526020019060010190611262565b5050505061250a565b846009015461263c565b505050565b6000610c998585858561263c565b600080339050611355848285604051806020016040528060008152506123f7565b949350505050565b600080339050610ff387828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611e0b915050565b6113af610a2e565b6001600160a01b0316336001600160a01b0316146113df5760405162461bcd60e51b81526004016110af906148bf565b306113e8610a2e565b6001600160a01b03161461142a5760008036604051611408929190614847565b604051809103902090505b8061141e600261264a565b1461142857611413565b505b611433816126c9565b50565b60008033905061147e86828787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506123f792505050565b9695505050505050565b6000610c998585858561270a565b60006114a3848484612772565b90505b9392505050565b6114b5610a2e565b6001600160a01b0316336001600160a01b0316146114e55760405162461bcd60e51b81526004016110af906148bf565b306114ee610a2e565b6001600160a01b031614611530576000803660405161150e929190614847565b604051809103902090505b80611524600261264a565b1461152e57611519565b505b61143381612828565b6000610afb82612891565b6000610a4260075490565b600860009054906101000a90046001600160a01b03166001600160a01b0316630e18b6816040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561159f57600080fd5b505af11580156115b3573d6000803e3d6000fd5b50505050565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610ce8565b6115f0610a2e565b6001600160a01b0316336001600160a01b0316146116205760405162461bcd60e51b81526004016110af906148bf565b30611629610a2e565b6001600160a01b03161461166b5760008036604051611649929190614847565b604051809103902090505b8061165f600261264a565b1461166957611654565b505b600080856001600160a01b0316858585604051611689929190614847565b60006040518083038185875af1925050503d80600081146116c6576040519150601f19603f3d011682016040523d82523d6000602084013e6116cb565b606091505b50915091506116f38282604051806060016040528060288152602001614c91602891396128bd565b50505050505050565b60008484848460405160200161171594939291906148f6565b60408051601f19818403018152919052805160209091012095945050505050565b60006117463387878787876128d6565b61147e8686611755878761250a565b85611488565b6000818152600460209081526040918290206001810180548451818502810185019095528085529193611321939092908301828280156117c457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117a6575b50505050508260020180548060200260200160405190810160405280929190818152602001828054801561181757602002820191906000526020600020905b815481526020019060010190808311611803575b50505050506119bf84600301805480602002602001604051908101604052809291908181526020016000905b828210156118ef57838290600052602060002001805461186290614857565b80601f016020809104026020016040519081016040528092919081815260200182805461188e90614857565b80156118db5780601f106118b0576101008083540402835291602001916118db565b820191906000526020600020905b8154815290600101906020018083116118be57829003601f168201915b505050505081526020019060010190611843565b50505060048701805460408051602080840282018101909252828152935060009084015b8282101561130e57838290600052602060002001805461193290614857565b80601f016020809104026020016040519081016040528092919081815260200182805461195e90614857565b80156119ab5780601f10611980576101008083540402835291602001916119ab565b820191906000526020600020905b81548152906001019060200180831161198e57829003601f168201915b505050505081526020019060010190611913565b8460090154610c8b565b6119d1610a2e565b6001600160a01b0316336001600160a01b031614611a015760405162461bcd60e51b81526004016110af906148bf565b30611a0a610a2e565b6001600160a01b031614611a4c5760008036604051611a2a929190614847565b604051809103902090505b80611a40600261264a565b14611a4a57611a35565b505b61143381612993565b60006114a68383611a7160408051602081019091526000815290565b612772565b611a7e610a2e565b6001600160a01b0316336001600160a01b031614611aae5760405162461bcd60e51b81526004016110af906148bf565b30611ab7610a2e565b6001600160a01b031614611af95760008036604051611ad7929190614847565b604051809103902090505b80611aed600261264a565b14611af757611ae2565b505b61143381612a34565b600081815260046020908152604091829020600181018054845181850281018501909552808552919361132193909290830182828015611b6b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b4d575b505050505082600201805480602002602001604051908101604052809291908181526020018280548015611bbe57602002820191906000526020600020905b815481526020019060010190808311611baa575b5050505050611d6684600301805480602002602001604051908101604052809291908181526020016000905b82821015611c96578382906000526020600020018054611c0990614857565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3590614857565b8015611c825780601f10611c5757610100808354040283529160200191611c82565b820191906000526020600020905b815481529060010190602001808311611c6557829003601f168201915b505050505081526020019060010190611bea565b50505060048701805460408051602080840282018101909252828152935060009084015b8282101561130e578382906000526020600020018054611cd990614857565b80601f0160208091040260200160405190810160405280929190818152602001828054611d0590614857565b8015611d525780601f10611d2757610100808354040283529160200191611d52565b820191906000526020600020905b815481529060010190602001808311611d3557829003601f168201915b505050505081526020019060010190611cba565b8460090154610cb2565b60006001600160e01b03198216636e665ced60e01b1480610afb5750610afb82612a75565b6000610afb611da2612ae0565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611df487878787612c07565b91509150611e0181612ccb565b5095945050505050565b6000858152600160208190526040822090611e2588610ffe565b6007811115611e3657611e36614332565b14611e8f5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b60648201526084016110af565b604080516020810190915281546001600160401b031690819052600090611eb890889086612772565b9050611ec78888888488612e19565b8351611f1957866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda489888489604051611f0c9493929190614941565b60405180910390a2610ff3565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128988848989604051611f5a959493929190614969565b60405180910390a2979650505050505050565b600080611f7c868686866116fc565b90506004611f8982610ffe565b6007811115611f9a57611f9a614332565b14611fb75760405162461bcd60e51b81526004016110af906149af565b60085460408051630d48571f60e31b815290516000926001600160a01b031691636a42b8f8916004808301926020929190829003018186803b158015611ffc57600080fd5b505afa158015612010573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203491906149f0565b61203e9042614a09565b905061206061204c82612fb6565b600084815260096020526040902090613022565b60005b87518110156122cf5760085488516001600160a01b039091169063f2b06537908a908490811061209557612095614a21565b60200260200101518984815181106120af576120af614a21565b60200260200101518985815181106120c9576120c9614a21565b6020026020010151866040516020016120e59493929190614a37565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161211991815260200190565b60206040518083038186803b15801561213157600080fd5b505afa158015612145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121699190614a7d565b156121e75760405162461bcd60e51b815260206004820152604260248201527f476f7665726e6f7254696d656c6f636b436f6d706f756e643a206964656e746960448201527f63616c2070726f706f73616c20616374696f6e20616c72656164792071756575606482015261195960f21b608482015260a4016110af565b60085488516001600160a01b0390911690633a66f901908a908490811061221057612210614a21565b602002602001015189848151811061222a5761222a614a21565b602002602001015189858151811061224457612244614a21565b6020026020010151866040518563ffffffff1660e01b815260040161226c9493929190614a37565b602060405180830381600087803b15801561228657600080fd5b505af115801561229a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122be91906149f0565b506122c881614a9f565b9050612063565b5060408051838152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289291015b60405180910390a15095945050505050565b600080612323868686866116fc565b9050600061233082610ffe565b9050600481600781111561234657612346614332565b14806123635750600581600781111561236157612361614332565b145b61237f5760405162461bcd60e51b81526004016110af906149af565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a16123dd8288888888613040565b6123ea82888888886130e3565b611e0182888888886130f0565b6000610c998585858561241560408051602081019091526000815290565b611e0b565b60008061242683613129565b9050600481600781111561243c5761243c614332565b146124475792915050565b600061245284611539565b905080612460575092915050565b600860009054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ae57600080fd5b505afa1580156124c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e691906149f0565b6124f09082614a09565b4210612500575060069392505050565b5060059392505050565b6060600082516001600160401b0381111561252757612527613d82565b60405190808252806020026020018201604052801561255a57816020015b60608152602001906001900390816125455790505b50905060005b84518110156126345784818151811061257b5761257b614a21565b6020026020010151516000146125eb5784818151811061259d5761259d614a21565b6020026020010151805190602001208482815181106125be576125be614a21565b60200260200101516040516020016125d7929190614aba565b604051602081830303815290604052612606565b8381815181106125fd576125fd614a21565b60200260200101515b82828151811061261857612618614a21565b60200260200101819052508061262d90614a9f565b9050612560565b509392505050565b6000610c9985858585613238565b60006126658254600f81810b600160801b909204900b131590565b1561268357604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60055460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600555565b600061276633868686516001600160401b0381111561272b5761272b613d82565b60405190808252806020026020018201604052801561275e57816020015b60608152602001906001900390816127495790505b5087876128d6565b610c9985858585613353565b60405163782d6fe160e01b81526001600160a01b038481166004830152602482018490526000917f00000000000000000000000000000000000000000000000000000000000000009091169063782d6fe19060440160206040518083038186803b1580156127df57600080fd5b505afa1580156127f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128179190614aeb565b6001600160601b0316949350505050565b600854604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526009602090815260408083208151928301909152546001600160401b031690819052610ce8565b606083156128cc5750816114a6565b6114a683836135f7565b8051602082012060006128f487876128ee888861250a565b856116fc565b60008181526004602052604090206009810154919250906129885780546001600160a01b0319166001600160a01b038a16178155875161293d90600183019060208b0190613a97565b50865161295390600283019060208a0190613af8565b5085516129699060038301906020890190613b33565b50845161297f9060048301906020880190613b8c565b50600981018390555b505050505050505050565b600081116129f35760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084016110af565b60065460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600655565b60075460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600755565b60006001600160e01b0319821663bf26d89760e01b1480612aa657506001600160e01b031982166379dd796f60e01b145b80612ac157506001600160e01b03198216630271189760e51b145b80610afb57506301ffc9a760e01b6001600160e01b0319831614610afb565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015612b3957507f000000000000000000000000000000000000000000000000000000000000000046145b15612b6357507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612c3e5750600090506003612cc2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612c92573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612cbb57600060019250925050612cc2565b9150600090505b94509492505050565b6000816004811115612cdf57612cdf614332565b1415612ce85750565b6001816004811115612cfc57612cfc614332565b1415612d4a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016110af565b6002816004811115612d5e57612d5e614332565b1415612dac5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016110af565b6003816004811115612dc057612dc0614332565b14156114335760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016110af565b60008581526004602090815260408083206001600160a01b038816845260088101909252909120805460ff1615612ea85760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a20766f746560448201526c08185b1c9958591e4818d85cdd609a1b60648201526084016110af565b805460ff86166101000261ffff19909116176001178155612ec884613621565b81546001600160601b039190911662010000026dffffffffffffffffffffffff00001990911617815560ff8516612f185783826006016000828254612f0d9190614a09565b909155506116f39050565b60ff851660011415612f385783826005016000828254612f0d9190614a09565b60ff851660021415612f585783826007016000828254612f0d9190614a09565b60405162461bcd60e51b815260206004820152602d60248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a20696e766160448201526c6c696420766f7465207479706560981b60648201526084016110af565b60006001600160401b0382111561301e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b60648201526084016110af565b5090565b815467ffffffffffffffff19166001600160401b0391909116179055565b30613049610a2e565b6001600160a01b0316146130dc5760005b84518110156130da57306001600160a01b031685828151811061307f5761307f614a21565b60200260200101516001600160a01b031614156130ca576130ca8382815181106130ab576130ab614a21565b602002602001015180519060200120600261368990919063ffffffff16565b6130d381614a9f565b905061305a565b505b5050505050565b6130dc85858585856136c5565b306130f9610a2e565b6001600160a01b0316146130dc57600254600f81810b600160801b909204900b13156130dc5760006002556130dc565b6000818152600160205260408120600281015460ff161561314d5750600792915050565b6002810154610100900460ff16156131685750600292915050565b600061317384610cc0565b9050806131c25760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c20696400000060448201526064016110af565b4381106131d3575060009392505050565b60006131de856115b9565b90504381106131f257506001949350505050565b6131fb8561384a565b801561321d575060008581526004602052604090206006810154600590910154115b1561322d57506004949350505050565b506003949350505050565b60008061324786868686613872565b9050600061325482611539565b90508015611e015760005b87518110156133305760085488516001600160a01b039091169063591fcdfe908a908490811061329157613291614a21565b60200260200101518984815181106132ab576132ab614a21565b60200260200101518985815181106132c5576132c5614a21565b6020026020010151866040518563ffffffff1660e01b81526004016132ed9493929190614a37565b600060405180830381600087803b15801561330757600080fd5b505af115801561331b573d6000803e3d6000fd5b505050508061332990614a9f565b905061325f565b506000828152600960205260409020805467ffffffffffffffff19169055611e01565b600061335d611544565b61336c336109756001436148a8565b10156133d45760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b60648201526084016110af565b60006133e986868686805190602001206116fc565b9050845186511461340c5760405162461bcd60e51b81526004016110af90614b14565b835186511461342d5760405162461bcd60e51b81526004016110af90614b14565b600086511161347e5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c000000000000000060448201526064016110af565b600081815260016020908152604091829020825191820190925281546001600160401b031690819052156134fe5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b60648201526084016110af565b600061351161350c60055490565b612fb6565b61351a43612fb6565b6135249190614b55565b9050600061353461350c60065490565b61353e9083614b55565b905061354a8383613022565b6135576001840182613022565b7f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b0381111561359557613595613d82565b6040519080825280602002602001820160405280156135c857816020015b60608152602001906001900390816135b35790505b508c88888e6040516135e299989796959493929190614b80565b60405180910390a15091979650505050505050565b8151156136075781518083602001fd5b8060405162461bcd60e51b81526004016110af9190613f43565b60006001600160601b0382111561301e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084016110af565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b60006136d086611539565b90506000811161373c5760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f7254696d656c6f636b436f6d706f756e643a2070726f706f73604482015270185b081b9bdd081e595d081c5d595d5959607a1b60648201526084016110af565b600854613752906001600160a01b03163461397e565b60005b85518110156116f35760085486516001600160a01b0390911690630825f38f9088908490811061378757613787614a21565b60200260200101518784815181106137a1576137a1614a21565b60200260200101518785815181106137bb576137bb614a21565b6020026020010151866040518563ffffffff1660e01b81526004016137e39493929190614a37565b600060405180830381600087803b1580156137fd57600080fd5b505af1158015613811573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526138399190810190614c23565b5061384381614a9f565b9050613755565b600081815260046020526040812060058101546138696109e185610cc0565b11159392505050565b600080613881868686866116fc565b9050600061388e82610ffe565b905060028160078111156138a4576138a4614332565b141580156138c4575060068160078111156138c1576138c1614332565b14155b80156138e2575060078160078111156138df576138df614332565b14155b61392e5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f742061637469766500000060448201526064016110af565b60008281526001602052604090819020600201805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906123029084815260200190565b804710156139ce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016110af565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613a1b576040519150601f19603f3d011682016040523d82523d6000602084013e613a20565b606091505b50509050806113215760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016110af565b828054828255906000526020600020908101928215613aec579160200282015b82811115613aec57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613ab7565b5061301e929150613be5565b828054828255906000526020600020908101928215613aec579160200282015b82811115613aec578251825591602001919060010190613b18565b828054828255906000526020600020908101928215613b80579160200282015b82811115613b805782518051613b70918491602090910190613bfa565b5091602001919060010190613b53565b5061301e929150613c6d565b828054828255906000526020600020908101928215613bd9579160200282015b82811115613bd95782518051613bc9918491602090910190613bfa565b5091602001919060010190613bac565b5061301e929150613c8a565b5b8082111561301e5760008155600101613be6565b828054613c0690614857565b90600052602060002090601f016020900481019282613c285760008555613aec565b82601f10613c4157805160ff1916838001178555613aec565b82800160010185558215613aec5791820182811115613aec578251825591602001919060010190613b18565b8082111561301e576000613c818282613ca7565b50600101613c6d565b8082111561301e576000613c9e8282613ca7565b50600101613c8a565b508054613cb390614857565b6000825580601f10613cc3575050565b601f0160209004906000526020600020908101906114339190613be5565b600060208284031215613cf357600080fd5b5035919050565b600060208284031215613d0c57600080fd5b81356001600160e01b0319811681146114a657600080fd5b803560ff81168114613d3557600080fd5b919050565b60008083601f840112613d4c57600080fd5b5081356001600160401b03811115613d6357600080fd5b602083019150836020828501011115613d7b57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613dc057613dc0613d82565b604052919050565b60006001600160401b03821115613de157613de1613d82565b50601f01601f191660200190565b600082601f830112613e0057600080fd5b8135613e13613e0e82613dc8565b613d98565b818152846020838601011115613e2857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060e0898b031215613e6157600080fd5b88359750613e7160208a01613d24565b965060408901356001600160401b0380821115613e8d57600080fd5b613e998c838d01613d3a565b909850965060608b0135915080821115613eb257600080fd5b50613ebf8b828c01613def565b945050613ece60808a01613d24565b925060a0890135915060c089013590509295985092959890939650565b60005b83811015613f06578181015183820152602001613eee565b838111156115b35750506000910152565b60008151808452613f2f816020860160208601613eeb565b601f01601f19169290920160200192915050565b6020815260006114a66020830184613f17565b6001600160a01b038116811461143357600080fd5b60008060008060808587031215613f8157600080fd5b8435613f8c81613f56565b93506020850135613f9c81613f56565b92506040850135915060608501356001600160401b03811115613fbe57600080fd5b613fca87828801613def565b91505092959194509250565b60006001600160401b03821115613fef57613fef613d82565b5060051b60200190565b600082601f83011261400a57600080fd5b8135602061401a613e0e83613fd6565b82815260059290921b8401810191818101908684111561403957600080fd5b8286015b8481101561405d57803561405081613f56565b835291830191830161403d565b509695505050505050565b600082601f83011261407957600080fd5b81356020614089613e0e83613fd6565b82815260059290921b840181019181810190868411156140a857600080fd5b8286015b8481101561405d57803583529183019183016140ac565b600082601f8301126140d457600080fd5b813560206140e4613e0e83613fd6565b82815260059290921b8401810191818101908684111561410357600080fd5b8286015b8481101561405d5780356001600160401b038111156141265760008081fd5b6141348986838b0101613def565b845250918301918301614107565b6000806000806080858703121561415857600080fd5b84356001600160401b038082111561416f57600080fd5b61417b88838901613ff9565b9550602087013591508082111561419157600080fd5b61419d88838901614068565b945060408701359150808211156141b357600080fd5b506141c0878288016140c3565b949793965093946060013593505050565b600081518084526020808501945080840160005b8381101561420a5781516001600160a01b0316875295820195908201906001016141e5565b509495945050505050565b600081518084526020808501945080840160005b8381101561420a57815187529582019590820190600101614229565b6000815180845260208085019450848260051b860182860160005b8581101561428a578383038952614278838351613f17565b98850198925090840190600101614260565b5090979650505050505050565b6080815260006142aa60808301876141d1565b82810360208401526142bc8187614215565b905082810360408401526142d08186614245565b90508281036060840152610ff38185614245565b600080600080600060a086880312156142fc57600080fd5b8535945061430c60208701613d24565b935061431a60408701613d24565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061436a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561438357600080fd5b82359150602083013561439581613f56565b809150509250929050565b600080604083850312156143b357600080fd5b823591506143c360208401613d24565b90509250929050565b6000806000806000608086880312156143e457600080fd5b853594506143f460208701613d24565b935060408601356001600160401b038082111561441057600080fd5b61441c89838a01613d3a565b9095509350606088013591508082111561443557600080fd5b5061444288828901613def565b9150509295509295909350565b6000806000806060858703121561446557600080fd5b8435935061447560208601613d24565b925060408501356001600160401b0381111561449057600080fd5b61449c87828801613d3a565b95989497509550505050565b600080600080608085870312156144be57600080fd5b84356001600160401b03808211156144d557600080fd5b6144e188838901613ff9565b955060208701359150808211156144f757600080fd5b61450388838901614068565b9450604087013591508082111561451957600080fd5b614525888389016140c3565b9350606087013591508082111561453b57600080fd5b50613fca87828801613def565b60008060006060848603121561455d57600080fd5b833561456881613f56565b92506020840135915060408401356001600160401b0381111561458a57600080fd5b61459686828701613def565b9150509250925092565b6000602082840312156145b257600080fd5b81356114a681613f56565b600080600080600060a086880312156145d557600080fd5b85356145e081613f56565b945060208601356145f081613f56565b935060408601356001600160401b038082111561460c57600080fd5b61461889838a01614068565b9450606088013591508082111561462e57600080fd5b61463a89838a01614068565b9350608088013591508082111561443557600080fd5b6000806000806060858703121561466657600080fd5b843561467181613f56565b93506020850135925060408501356001600160401b0381111561449057600080fd5b600082601f8301126146a457600080fd5b813560206146b4613e0e83613fd6565b82815260059290921b840181019181810190868411156146d357600080fd5b8286015b8481101561405d5780356001600160401b038111156146f65760008081fd5b6147048986838b0101613def565b8452509183019183016146d7565b600080600080600060a0868803121561472a57600080fd5b85356001600160401b038082111561474157600080fd5b61474d89838a01613ff9565b9650602088013591508082111561476357600080fd5b61476f89838a01614068565b9550604088013591508082111561478557600080fd5b61479189838a01614693565b945060608801359150808211156147a757600080fd5b61463a89838a016140c3565b600080604083850312156147c657600080fd5b82356147d181613f56565b946020939093013593505050565b600080600080600060a086880312156147f757600080fd5b853561480281613f56565b9450602086013561481281613f56565b9350604086013592506060860135915060808601356001600160401b0381111561483b57600080fd5b61444288828901613def565b8183823760009101908152919050565b600181811c9082168061486b57607f821691505b6020821081141561488c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156148ba576148ba614892565b500390565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b60808152600061490960808301876141d1565b828103602084015261491b8187614215565b9050828103604084015261492f8186614245565b91505082606083015295945050505050565b84815260ff8416602082015282604082015260806060820152600061147e6080830184613f17565b85815260ff8516602082015283604082015260a06060820152600061499160a0830185613f17565b82810360808401526149a38185613f17565b98975050505050505050565b60208082526021908201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756040820152601b60fa1b606082015260800190565b600060208284031215614a0257600080fd5b5051919050565b60008219821115614a1c57614a1c614892565b500190565b634e487b7160e01b600052603260045260246000fd5b60018060a01b038516815283602082015260a06040820152600060a082015260c060608201526000614a6c60c0830185613f17565b905082608083015295945050505050565b600060208284031215614a8f57600080fd5b815180151581146114a657600080fd5b6000600019821415614ab357614ab3614892565b5060010190565b6001600160e01b0319831681528151600090614add816004850160208701613eeb565b919091016004019392505050565b600060208284031215614afd57600080fd5b81516001600160601b03811681146114a657600080fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60006001600160401b03808316818516808303821115614b7757614b77614892565b01949350505050565b8981526001600160a01b038916602082015261012060408201819052600090614bab8382018b6141d1565b90508281036060840152614bbf818a614215565b90508281036080840152614bd38189614245565b905082810360a0840152614be78188614245565b6001600160401b0387811660c0860152861660e08501528381036101008501529050614c138185613f17565b9c9b505050505050505050505050565b600060208284031215614c3557600080fd5b81516001600160401b03811115614c4b57600080fd5b8201601f81018413614c5c57600080fd5b8051614c6a613e0e82613dc8565b818152856020838501011115614c7f57600080fd5b610c99826020830160208601613eeb56fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765a2646970667358221220b82423976aff486970d11fcac36fb57ad552a0e8af403434c5c57e446de9ae7564736f6c63430008090033";

    public static final String FUNC_BALLOT_TYPEHASH = "BALLOT_TYPEHASH";

    public static final String FUNC_COUNTING_MODE = "COUNTING_MODE";

    public static final String FUNC_EXTENDED_BALLOT_TYPEHASH = "EXTENDED_BALLOT_TYPEHASH";

    public static final String FUNC___ACCEPTADMIN = "__acceptAdmin";

    public static final String FUNC_cancel = "cancel";

    public static final String FUNC_CASTVOTE = "castVote";

    public static final String FUNC_CASTVOTEBYSIG = "castVoteBySig";

    public static final String FUNC_CASTVOTEWITHREASON = "castVoteWithReason";

    public static final String FUNC_CASTVOTEWITHREASONANDPARAMS = "castVoteWithReasonAndParams";

    public static final String FUNC_CASTVOTEWITHREASONANDPARAMSBYSIG = "castVoteWithReasonAndParamsBySig";

    public static final String FUNC_execute = "execute";

    public static final String FUNC_GETACTIONS = "getActions";

    public static final String FUNC_GETRECEIPT = "getReceipt";

    public static final String FUNC_GETVOTES = "getVotes";

    public static final String FUNC_GETVOTESWITHPARAMS = "getVotesWithParams";

    public static final String FUNC_HASVOTED = "hasVoted";

    public static final String FUNC_HASHPROPOSAL = "hashProposal";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_ONERC1155BATCHRECEIVED = "onERC1155BatchReceived";

    public static final String FUNC_ONERC1155RECEIVED = "onERC1155Received";

    public static final String FUNC_ONERC721RECEIVED = "onERC721Received";

    public static final String FUNC_PROPOSALDEADLINE = "proposalDeadline";

    public static final String FUNC_PROPOSALETA = "proposalEta";

    public static final String FUNC_PROPOSALSNAPSHOT = "proposalSnapshot";

    public static final String FUNC_PROPOSALTHRESHOLD = "proposalThreshold";

    public static final String FUNC_PROPOSALS = "proposals";

    public static final String FUNC_propose = "propose";

    public static final String FUNC_queue = "queue";

    public static final String FUNC_QUORUM = "quorum";

    public static final String FUNC_QUORUMVOTES = "quorumVotes";

    public static final String FUNC_RELAY = "relay";

    public static final String FUNC_SETPROPOSALTHRESHOLD = "setProposalThreshold";

    public static final String FUNC_SETVOTINGDELAY = "setVotingDelay";

    public static final String FUNC_SETVOTINGPERIOD = "setVotingPeriod";

    public static final String FUNC_STATE = "state";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TIMELOCK = "timelock";

    public static final String FUNC_TOKEN = "token";

    public static final String FUNC_UPDATETIMELOCK = "updateTimelock";

    public static final String FUNC_VERSION = "version";

    public static final String FUNC_VOTINGDELAY = "votingDelay";

    public static final String FUNC_VOTINGPERIOD = "votingPeriod";

    public static final Event PROPOSALCANCELED_EVENT = new Event("ProposalCanceled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PROPOSALCREATED_EVENT = new Event("ProposalCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<DynamicArray<Address>>() {}, new TypeReference<DynamicArray<Uint256>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event PROPOSALEXECUTED_EVENT = new Event("ProposalExecuted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PROPOSALQUEUED_EVENT = new Event("ProposalQueued", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event PROPOSALTHRESHOLDSET_EVENT = new Event("ProposalThresholdSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event TIMELOCKCHANGE_EVENT = new Event("TimelockChange", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event VOTECAST_EVENT = new Event("VoteCast", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event VOTECASTWITHPARAMS_EVENT = new Event("VoteCastWithParams", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<DynamicBytes>() {}));
    ;

    public static final Event VOTINGDELAYSET_EVENT = new Event("VotingDelaySet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event VOTINGPERIODSET_EVENT = new Event("VotingPeriodSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected GovernorCompatibilityBravoMock(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected GovernorCompatibilityBravoMock(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected GovernorCompatibilityBravoMock(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected GovernorCompatibilityBravoMock(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<ProposalCanceledEventResponse> getProposalCanceledEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALCANCELED_EVENT, transactionReceipt);
        ArrayList<ProposalCanceledEventResponse> responses = new ArrayList<ProposalCanceledEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalCanceledEventResponse typedResponse = new ProposalCanceledEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalCanceledEventResponse> proposalCanceledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalCanceledEventResponse>() {
            @Override
            public ProposalCanceledEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALCANCELED_EVENT, log);
                ProposalCanceledEventResponse typedResponse = new ProposalCanceledEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalCanceledEventResponse> proposalCanceledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALCANCELED_EVENT));
        return proposalCanceledEventFlowable(filter);
    }

    public static List<ProposalCreatedEventResponse> getProposalCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALCREATED_EVENT, transactionReceipt);
        ArrayList<ProposalCreatedEventResponse> responses = new ArrayList<ProposalCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalCreatedEventResponse typedResponse = new ProposalCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.proposer = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.targets = (List<String>) ((Array) eventValues.getNonIndexedValues().get(2)).getNativeValueCopy();
            typedResponse.values = (List<BigInteger>) ((Array) eventValues.getNonIndexedValues().get(3)).getNativeValueCopy();
            typedResponse.signatures = (List<String>) ((Array) eventValues.getNonIndexedValues().get(4)).getNativeValueCopy();
            typedResponse.calldatas = (List<byte[]>) ((Array) eventValues.getNonIndexedValues().get(5)).getNativeValueCopy();
            typedResponse.startBlock = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.endBlock = (BigInteger) eventValues.getNonIndexedValues().get(7).getValue();
            typedResponse.description = (String) eventValues.getNonIndexedValues().get(8).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalCreatedEventResponse> proposalCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalCreatedEventResponse>() {
            @Override
            public ProposalCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALCREATED_EVENT, log);
                ProposalCreatedEventResponse typedResponse = new ProposalCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.proposer = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.targets = (List<String>) ((Array) eventValues.getNonIndexedValues().get(2)).getNativeValueCopy();
                typedResponse.values = (List<BigInteger>) ((Array) eventValues.getNonIndexedValues().get(3)).getNativeValueCopy();
                typedResponse.signatures = (List<String>) ((Array) eventValues.getNonIndexedValues().get(4)).getNativeValueCopy();
                typedResponse.calldatas = (List<byte[]>) ((Array) eventValues.getNonIndexedValues().get(5)).getNativeValueCopy();
                typedResponse.startBlock = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
                typedResponse.endBlock = (BigInteger) eventValues.getNonIndexedValues().get(7).getValue();
                typedResponse.description = (String) eventValues.getNonIndexedValues().get(8).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalCreatedEventResponse> proposalCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALCREATED_EVENT));
        return proposalCreatedEventFlowable(filter);
    }

    public static List<ProposalExecutedEventResponse> getProposalExecutedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALEXECUTED_EVENT, transactionReceipt);
        ArrayList<ProposalExecutedEventResponse> responses = new ArrayList<ProposalExecutedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalExecutedEventResponse typedResponse = new ProposalExecutedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalExecutedEventResponse> proposalExecutedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalExecutedEventResponse>() {
            @Override
            public ProposalExecutedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALEXECUTED_EVENT, log);
                ProposalExecutedEventResponse typedResponse = new ProposalExecutedEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalExecutedEventResponse> proposalExecutedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALEXECUTED_EVENT));
        return proposalExecutedEventFlowable(filter);
    }

    public static List<ProposalQueuedEventResponse> getProposalQueuedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALQUEUED_EVENT, transactionReceipt);
        ArrayList<ProposalQueuedEventResponse> responses = new ArrayList<ProposalQueuedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalQueuedEventResponse typedResponse = new ProposalQueuedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.eta = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalQueuedEventResponse> proposalQueuedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalQueuedEventResponse>() {
            @Override
            public ProposalQueuedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALQUEUED_EVENT, log);
                ProposalQueuedEventResponse typedResponse = new ProposalQueuedEventResponse();
                typedResponse.log = log;
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.eta = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalQueuedEventResponse> proposalQueuedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALQUEUED_EVENT));
        return proposalQueuedEventFlowable(filter);
    }

    public static List<ProposalThresholdSetEventResponse> getProposalThresholdSetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PROPOSALTHRESHOLDSET_EVENT, transactionReceipt);
        ArrayList<ProposalThresholdSetEventResponse> responses = new ArrayList<ProposalThresholdSetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalThresholdSetEventResponse typedResponse = new ProposalThresholdSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldProposalThreshold = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newProposalThreshold = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalThresholdSetEventResponse> proposalThresholdSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalThresholdSetEventResponse>() {
            @Override
            public ProposalThresholdSetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALTHRESHOLDSET_EVENT, log);
                ProposalThresholdSetEventResponse typedResponse = new ProposalThresholdSetEventResponse();
                typedResponse.log = log;
                typedResponse.oldProposalThreshold = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newProposalThreshold = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalThresholdSetEventResponse> proposalThresholdSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALTHRESHOLDSET_EVENT));
        return proposalThresholdSetEventFlowable(filter);
    }

    public static List<TimelockChangeEventResponse> getTimelockChangeEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(TIMELOCKCHANGE_EVENT, transactionReceipt);
        ArrayList<TimelockChangeEventResponse> responses = new ArrayList<TimelockChangeEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TimelockChangeEventResponse typedResponse = new TimelockChangeEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldTimelock = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newTimelock = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TimelockChangeEventResponse> timelockChangeEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TimelockChangeEventResponse>() {
            @Override
            public TimelockChangeEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TIMELOCKCHANGE_EVENT, log);
                TimelockChangeEventResponse typedResponse = new TimelockChangeEventResponse();
                typedResponse.log = log;
                typedResponse.oldTimelock = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newTimelock = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TimelockChangeEventResponse> timelockChangeEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TIMELOCKCHANGE_EVENT));
        return timelockChangeEventFlowable(filter);
    }

    public static List<VoteCastEventResponse> getVoteCastEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTECAST_EVENT, transactionReceipt);
        ArrayList<VoteCastEventResponse> responses = new ArrayList<VoteCastEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteCastEventResponse typedResponse = new VoteCastEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VoteCastEventResponse> voteCastEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VoteCastEventResponse>() {
            @Override
            public VoteCastEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTECAST_EVENT, log);
                VoteCastEventResponse typedResponse = new VoteCastEventResponse();
                typedResponse.log = log;
                typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VoteCastEventResponse> voteCastEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTECAST_EVENT));
        return voteCastEventFlowable(filter);
    }

    public static List<VoteCastWithParamsEventResponse> getVoteCastWithParamsEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTECASTWITHPARAMS_EVENT, transactionReceipt);
        ArrayList<VoteCastWithParamsEventResponse> responses = new ArrayList<VoteCastWithParamsEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteCastWithParamsEventResponse typedResponse = new VoteCastWithParamsEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.params = (byte[]) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VoteCastWithParamsEventResponse> voteCastWithParamsEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VoteCastWithParamsEventResponse>() {
            @Override
            public VoteCastWithParamsEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTECASTWITHPARAMS_EVENT, log);
                VoteCastWithParamsEventResponse typedResponse = new VoteCastWithParamsEventResponse();
                typedResponse.log = log;
                typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.support = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.weight = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.reason = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.params = (byte[]) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VoteCastWithParamsEventResponse> voteCastWithParamsEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTECASTWITHPARAMS_EVENT));
        return voteCastWithParamsEventFlowable(filter);
    }

    public static List<VotingDelaySetEventResponse> getVotingDelaySetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTINGDELAYSET_EVENT, transactionReceipt);
        ArrayList<VotingDelaySetEventResponse> responses = new ArrayList<VotingDelaySetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VotingDelaySetEventResponse typedResponse = new VotingDelaySetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldVotingDelay = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newVotingDelay = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VotingDelaySetEventResponse> votingDelaySetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VotingDelaySetEventResponse>() {
            @Override
            public VotingDelaySetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTINGDELAYSET_EVENT, log);
                VotingDelaySetEventResponse typedResponse = new VotingDelaySetEventResponse();
                typedResponse.log = log;
                typedResponse.oldVotingDelay = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newVotingDelay = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VotingDelaySetEventResponse> votingDelaySetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTINGDELAYSET_EVENT));
        return votingDelaySetEventFlowable(filter);
    }

    public static List<VotingPeriodSetEventResponse> getVotingPeriodSetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTINGPERIODSET_EVENT, transactionReceipt);
        ArrayList<VotingPeriodSetEventResponse> responses = new ArrayList<VotingPeriodSetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VotingPeriodSetEventResponse typedResponse = new VotingPeriodSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldVotingPeriod = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newVotingPeriod = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VotingPeriodSetEventResponse> votingPeriodSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VotingPeriodSetEventResponse>() {
            @Override
            public VotingPeriodSetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTINGPERIODSET_EVENT, log);
                VotingPeriodSetEventResponse typedResponse = new VotingPeriodSetEventResponse();
                typedResponse.log = log;
                typedResponse.oldVotingPeriod = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newVotingPeriod = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VotingPeriodSetEventResponse> votingPeriodSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTINGPERIODSET_EVENT));
        return votingPeriodSetEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> BALLOT_TYPEHASH() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BALLOT_TYPEHASH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> COUNTING_MODE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_COUNTING_MODE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<byte[]> EXTENDED_BALLOT_TYPEHASH() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXTENDED_BALLOT_TYPEHASH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> __acceptAdmin() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC___ACCEPTADMIN, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> cancel(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_cancel, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> cancel(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, byte[] salt) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_cancel, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.generated.Bytes32(salt)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVote(BigInteger proposalId, BigInteger support) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteBySig(BigInteger proposalId, BigInteger support, BigInteger v, byte[] r, byte[] s) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEBYSIG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.generated.Uint8(v), 
                new org.web3j.abi.datatypes.generated.Bytes32(r), 
                new org.web3j.abi.datatypes.generated.Bytes32(s)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteWithReason(BigInteger proposalId, BigInteger support, String reason) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEWITHREASON, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.Utf8String(reason)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteWithReasonAndParams(BigInteger proposalId, BigInteger support, String reason, byte[] params) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEWITHREASONANDPARAMS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.Utf8String(reason), 
                new org.web3j.abi.datatypes.DynamicBytes(params)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> castVoteWithReasonAndParamsBySig(BigInteger proposalId, BigInteger support, String reason, byte[] params, BigInteger v, byte[] r, byte[] s) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CASTVOTEWITHREASONANDPARAMSBYSIG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.generated.Uint8(support), 
                new org.web3j.abi.datatypes.Utf8String(reason), 
                new org.web3j.abi.datatypes.DynamicBytes(params), 
                new org.web3j.abi.datatypes.generated.Uint8(v), 
                new org.web3j.abi.datatypes.generated.Bytes32(r), 
                new org.web3j.abi.datatypes.generated.Bytes32(s)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> execute(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, byte[] salt, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_execute, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.generated.Bytes32(salt)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> execute(BigInteger proposalId, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_execute, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, List<String>, List<byte[]>>> getActions(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETACTIONS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<DynamicArray<Uint256>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}));
        return new RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, List<String>, List<byte[]>>>(function,
                new Callable<Tuple4<List<String>, List<BigInteger>, List<String>, List<byte[]>>>() {
                    @Override
                    public Tuple4<List<String>, List<BigInteger>, List<String>, List<byte[]>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<List<String>, List<BigInteger>, List<String>, List<byte[]>>(
                                convertToNative((List<Address>) results.get(0).getValue()), 
                                convertToNative((List<Uint256>) results.get(1).getValue()), 
                                convertToNative((List<Utf8String>) results.get(2).getValue()), 
                                convertToNative((List<DynamicBytes>) results.get(3).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Receipt> getReceipt(BigInteger proposalId, String voter) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRECEIPT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.Address(160, voter)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Receipt>() {}));
        return executeRemoteCallSingleValueReturn(function, Receipt.class);
    }

    public RemoteFunctionCall<BigInteger> getVotes(String account, BigInteger blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account), 
                new org.web3j.abi.datatypes.generated.Uint256(blockNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getVotesWithParams(String account, BigInteger blockNumber, byte[] params) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETVOTESWITHPARAMS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account), 
                new org.web3j.abi.datatypes.generated.Uint256(blockNumber), 
                new org.web3j.abi.datatypes.DynamicBytes(params)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> hasVoted(BigInteger proposalId, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASVOTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> hashProposal(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, byte[] descriptionHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASHPROPOSAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.generated.Bytes32(descriptionHash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> onERC1155BatchReceived(String param0, String param1, List<BigInteger> param2, List<BigInteger> param3, byte[] param4) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ONERC1155BATCHRECEIVED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(param2, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(param3, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicBytes(param4)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> onERC1155Received(String param0, String param1, BigInteger param2, BigInteger param3, byte[] param4) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ONERC1155RECEIVED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1), 
                new org.web3j.abi.datatypes.generated.Uint256(param2), 
                new org.web3j.abi.datatypes.generated.Uint256(param3), 
                new org.web3j.abi.datatypes.DynamicBytes(param4)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> onERC721Received(String param0, String param1, BigInteger param2, byte[] param3) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ONERC721RECEIVED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.Address(160, param1), 
                new org.web3j.abi.datatypes.generated.Uint256(param2), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> proposalDeadline(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALDEADLINE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> proposalEta(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALETA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> proposalSnapshot(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALSNAPSHOT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> proposalThreshold() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALTHRESHOLD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple10<BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean, Boolean>> proposals(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSALS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}, new TypeReference<Bool>() {}));
        return new RemoteFunctionCall<Tuple10<BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean, Boolean>>(function,
                new Callable<Tuple10<BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean, Boolean>>() {
                    @Override
                    public Tuple10<BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean, Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple10<BigInteger, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean, Boolean>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue(), 
                                (Boolean) results.get(8).getValue(), 
                                (Boolean) results.get(9).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> propose(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_propose, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> propose(List<String> targets, List<BigInteger> values, List<String> signatures, List<byte[]> calldatas, String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_propose, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(signatures, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> queue(List<String> targets, List<BigInteger> values, List<byte[]> calldatas, byte[] salt) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_queue, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(targets, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(values, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.DynamicBytes>(
                        org.web3j.abi.datatypes.DynamicBytes.class,
                        org.web3j.abi.Utils.typeMap(calldatas, org.web3j.abi.datatypes.DynamicBytes.class)), 
                new org.web3j.abi.datatypes.generated.Bytes32(salt)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> queue(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_queue, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> quorum(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_QUORUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> quorumVotes() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_QUORUMVOTES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> relay(String target, BigInteger value, byte[] data, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RELAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, target), 
                new org.web3j.abi.datatypes.generated.Uint256(value), 
                new org.web3j.abi.datatypes.DynamicBytes(data)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> setProposalThreshold(BigInteger newProposalThreshold) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPROPOSALTHRESHOLD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(newProposalThreshold)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setVotingDelay(BigInteger newVotingDelay) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETVOTINGDELAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(newVotingDelay)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setVotingPeriod(BigInteger newVotingPeriod) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETVOTINGPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(newVotingPeriod)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> state(BigInteger proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_STATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> timelock() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TIMELOCK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> token() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKEN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> updateTimelock(String newTimelock) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATETIMELOCK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newTimelock)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> version() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> votingDelay() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTINGDELAY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> votingPeriod() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTINGPERIOD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static GovernorCompatibilityBravoMock load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new GovernorCompatibilityBravoMock(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static GovernorCompatibilityBravoMock load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new GovernorCompatibilityBravoMock(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static GovernorCompatibilityBravoMock load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new GovernorCompatibilityBravoMock(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static GovernorCompatibilityBravoMock load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new GovernorCompatibilityBravoMock(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<GovernorCompatibilityBravoMock> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String name_, String token_, BigInteger votingDelay_, BigInteger votingPeriod_, BigInteger proposalThreshold_, String timelock_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name_), 
                new org.web3j.abi.datatypes.Address(160, token_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingDelay_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingPeriod_), 
                new org.web3j.abi.datatypes.generated.Uint256(proposalThreshold_), 
                new org.web3j.abi.datatypes.Address(160, timelock_)));
        return deployRemoteCall(GovernorCompatibilityBravoMock.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<GovernorCompatibilityBravoMock> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String name_, String token_, BigInteger votingDelay_, BigInteger votingPeriod_, BigInteger proposalThreshold_, String timelock_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name_), 
                new org.web3j.abi.datatypes.Address(160, token_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingDelay_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingPeriod_), 
                new org.web3j.abi.datatypes.generated.Uint256(proposalThreshold_), 
                new org.web3j.abi.datatypes.Address(160, timelock_)));
        return deployRemoteCall(GovernorCompatibilityBravoMock.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<GovernorCompatibilityBravoMock> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String name_, String token_, BigInteger votingDelay_, BigInteger votingPeriod_, BigInteger proposalThreshold_, String timelock_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name_), 
                new org.web3j.abi.datatypes.Address(160, token_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingDelay_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingPeriod_), 
                new org.web3j.abi.datatypes.generated.Uint256(proposalThreshold_), 
                new org.web3j.abi.datatypes.Address(160, timelock_)));
        return deployRemoteCall(GovernorCompatibilityBravoMock.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<GovernorCompatibilityBravoMock> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String name_, String token_, BigInteger votingDelay_, BigInteger votingPeriod_, BigInteger proposalThreshold_, String timelock_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name_), 
                new org.web3j.abi.datatypes.Address(160, token_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingDelay_), 
                new org.web3j.abi.datatypes.generated.Uint256(votingPeriod_), 
                new org.web3j.abi.datatypes.generated.Uint256(proposalThreshold_), 
                new org.web3j.abi.datatypes.Address(160, timelock_)));
        return deployRemoteCall(GovernorCompatibilityBravoMock.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class Receipt extends StaticStruct {
        public Boolean hasVoted;

        public BigInteger support;

        public BigInteger votes;

        public Receipt(Boolean hasVoted, BigInteger support, BigInteger votes) {
            super(new org.web3j.abi.datatypes.Bool(hasVoted), 
                    new org.web3j.abi.datatypes.generated.Uint8(support), 
                    new org.web3j.abi.datatypes.generated.Uint96(votes));
            this.hasVoted = hasVoted;
            this.support = support;
            this.votes = votes;
        }

        public Receipt(Bool hasVoted, Uint8 support, Uint96 votes) {
            super(hasVoted, support, votes);
            this.hasVoted = hasVoted.getValue();
            this.support = support.getValue();
            this.votes = votes.getValue();
        }
    }

    public static class ProposalCanceledEventResponse extends BaseEventResponse {
        public BigInteger proposalId;
    }

    public static class ProposalCreatedEventResponse extends BaseEventResponse {
        public BigInteger proposalId;

        public String proposer;

        public List<String> targets;

        public List<BigInteger> values;

        public List<String> signatures;

        public List<byte[]> calldatas;

        public BigInteger startBlock;

        public BigInteger endBlock;

        public String description;
    }

    public static class ProposalExecutedEventResponse extends BaseEventResponse {
        public BigInteger proposalId;
    }

    public static class ProposalQueuedEventResponse extends BaseEventResponse {
        public BigInteger proposalId;

        public BigInteger eta;
    }

    public static class ProposalThresholdSetEventResponse extends BaseEventResponse {
        public BigInteger oldProposalThreshold;

        public BigInteger newProposalThreshold;
    }

    public static class TimelockChangeEventResponse extends BaseEventResponse {
        public String oldTimelock;

        public String newTimelock;
    }

    public static class VoteCastEventResponse extends BaseEventResponse {
        public String voter;

        public BigInteger proposalId;

        public BigInteger support;

        public BigInteger weight;

        public String reason;
    }

    public static class VoteCastWithParamsEventResponse extends BaseEventResponse {
        public String voter;

        public BigInteger proposalId;

        public BigInteger support;

        public BigInteger weight;

        public String reason;

        public byte[] params;
    }

    public static class VotingDelaySetEventResponse extends BaseEventResponse {
        public BigInteger oldVotingDelay;

        public BigInteger newVotingDelay;
    }

    public static class VotingPeriodSetEventResponse extends BaseEventResponse {
        public BigInteger oldVotingPeriod;

        public BigInteger newVotingPeriod;
    }
}
