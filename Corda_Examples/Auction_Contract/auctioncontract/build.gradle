buildscript {
	Properties constants = new Properties()
	file("$projectDir/../constants.properties").withInputStream { constants.load(it) }

	ext {
		corda_release_group = constants.getProperty("cordaReleaseGroup")
		corda_release_version = constants.getProperty("cordaVersion")
		corda_gradle_plugins_version = constants.getProperty("gradlePluginsVersion")
		junit_version = constants.getProperty("junitVersion")
		quasar_version = constants.getProperty("quasarVersion")
		log4j_version = constants.getProperty("log4jVersion")
		slf4j_version = constants.getProperty("slf4jVersion")
		corda_platform_version = constants.getProperty("platformVersion").toInteger()
		spring_boot_version = '2.0.2.RELEASE'
		spring_boot_gradle_plugin_version = '2.0.2.RELEASE'
		javaMainClass = "tudresden.corda.APIResponse"
	}

	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
	}
	dependencies {
		classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
		classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
		classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_gradle_plugin_version"
	}

}

plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.tudresden.cordasamples'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//repositories {
//	mavenCentral()
//}





dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompile "junit:junit:$junit_version"

	// Corda dependencies.
	cordaCompile "$corda_release_group:corda-core:$corda_release_version"
	cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
	cordaCompile "$corda_release_group:corda-finance-contracts:$corda_release_version"
	cordaCompile "$corda_release_group:corda-finance-workflows:$corda_release_version"
	cordaRuntime "$corda_release_group:corda:$corda_release_version"

	// CorDapp dependencies.
	cordapp("$corda_release_group:corda-finance-contracts:$corda_release_version")
	cordapp("$corda_release_group:corda-finance-workflows:$corda_release_version")
	cordapp project(":workflows")
	cordapp project(":contracts")

	cordaCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
	cordaCompile "org.apache.logging.log4j:log4j-web:${log4j_version}"
	cordaCompile "org.slf4j:jul-to-slf4j:$slf4j_version"

}


allprojects {
	apply plugin: 'java'

	repositories {
		mavenLocal()
		jcenter()
		mavenCentral()
		maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
		maven { url 'https://jitpack.io' }
		maven { url 'https://repo.gradle.org/gradle/libs-releases' }
	}

	tasks.withType(JavaCompile) {
		options.compilerArgs << "-parameters" // Required by Corda's serialisation framework.
	}

	jar {
		// This makes the JAR's SHA-256 hash repeatable.
		preserveFileTimestamps = false
		reproducibleFileOrder = true
	}
}

application {
	mainClassName = javaMainClass
}

task runWithJavaExec(type: JavaExec) {
	group = "Execution"
	description = "Run the main class with JavaExecTask"
	classpath = sourceSets.main.runtimeClasspath
	main = javaMainClass
}

test {
	useJUnitPlatform()
}
